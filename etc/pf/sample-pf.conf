# /etc/pf.conf
# https://man.openbsd.org/pf.conf.5
#
# Default PF configuration file.
#
# This file contains the main ruleset, which gets automatically loaded
# at startup.  PF will not be automatically enabled, however.  Instead,
# each component which utilizes PF is responsible for enabling and disabling
# PF via -E and -X as documented in pfctl(8).  That will ensure that PF
# is disabled only when the last enable reference is released.
#
# Care must be taken to ensure that the main ruleset does not get flushed,
# as the nested anchors rely on the anchor point defined here. In addition,
# to the anchors loaded by this file, some system services would dynamically 
# insert anchors into the main ruleset. These anchors will be added only when
# the system service is used and would removed on termination of the service.
#
# See pf.conf(5) for syntax.
#
#
#
# com.apple anchor point
#
#
# scrub-anchor "com.apple/*"
# nat-anchor "com.apple/*"
# rdr-anchor "com.apple/*"
# dummynet-anchor "com.apple/*"
# anchor "com.apple/*"
# load anchor "com.apple" from "/etc/pf.anchors/com.apple"
#

# custom rules
wifi = "en0"
table <blocklist> persist file "/etc/pf/blocklist"
set block-policy drop
set state-policy if-bound
set debug info
set optimization normal
set limit { states 30000, table-entries 250000 }
set skip on lo0
scrub in all no-df
block quick from any to lo0:network
# dnscrpyt-proxy
block drop quick on !lo0 proto udp from any to any port = 5355
block drop quick on !lo0 proto tcp from any to any port = 5355
# end dnscrpyt-proxy
block log quick from <blocklist> to any
block log quick from any to <blocklist>
block log on $wifi from { <blocklist> } to any
block log on $wifi from any to { <blocklist> }
antispoof quick for $wifi
match in all scrub (no-df random-id max-mss 1440)
match out on egress inet from !(egress:network) to any nat-to (egress:0)
block in log
block in log quick from no-route to any
block in log inet from any to localhost
block log all
pass in quick on $wifi inet keep state
pass out proto tcp from $wifi to any keep state
pass out proto udp from $wifi to any keep state
# end custom rules
